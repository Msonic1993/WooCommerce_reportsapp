# Generated by Django 3.2a1 on 2021-02-24 14:28

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('reportsapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SitetreeTree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('alias', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'sitetree_tree',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SitetreeTreeitem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('hint', models.CharField(max_length=200)),
                ('url', models.CharField(max_length=200)),
                ('urlaspattern', models.IntegerField()),
                ('hidden', models.IntegerField()),
                ('alias', models.CharField(blank=True, max_length=80, null=True)),
                ('description', models.TextField()),
                ('inmenu', models.IntegerField()),
                ('inbreadcrumbs', models.IntegerField()),
                ('insitetree', models.IntegerField()),
                ('access_loggedin', models.IntegerField()),
                ('access_guest', models.IntegerField()),
                ('access_restricted', models.IntegerField()),
                ('access_perm_type', models.IntegerField()),
                ('sort_order', models.IntegerField()),
            ],
            options={
                'db_table': 'sitetree_treeitem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SitetreeTreeitemAccessPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'sitetree_treeitem_access_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpWcOrderProductLookup',
            fields=[
                ('order_item_id', models.PositiveBigIntegerField(primary_key=True, serialize=False)),
                ('order_id', models.PositiveBigIntegerField()),
                ('product_id', models.PositiveBigIntegerField()),
                ('variation_id', models.PositiveBigIntegerField()),
                ('customer_id', models.PositiveBigIntegerField(blank=True, null=True)),
                ('date_created', models.DateTimeField(blank=True, null=True)),
                ('product_qty', models.IntegerField()),
                ('product_net_revenue', models.FloatField()),
                ('product_gross_revenue', models.FloatField()),
                ('coupon_amount', models.FloatField()),
                ('tax_amount', models.FloatField()),
                ('shipping_amount', models.FloatField()),
                ('shipping_tax_amount', models.FloatField()),
            ],
            options={
                'db_table': 'wp_wc_order_product_lookup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WpWcOrderStats',
            fields=[
                ('order_id', models.PositiveBigIntegerField(primary_key=True, serialize=False)),
                ('parent_id', models.PositiveBigIntegerField()),
                ('date_created', models.DateTimeField()),
                ('date_created_gmt', models.DateTimeField()),
                ('num_items_sold', models.IntegerField()),
                ('tax_total', models.FloatField()),
                ('shipping_total', models.FloatField()),
                ('net_total', models.FloatField()),
                ('returning_customer', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(max_length=200)),
                ('customer_id', models.PositiveBigIntegerField()),
                ('total_sales', models.FloatField()),
            ],
            options={
                'db_table': 'wp_wc_order_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='costs',
            fields=[
                ('cost_id', models.PositiveBigIntegerField(primary_key=True, serialize=False)),
                ('cost_name', models.CharField(max_length=200)),
                ('date_cost', models.DateField()),
                ('num_items_buy', models.IntegerField()),
                ('unit_price', models.FloatField()),
                ('tax_total', models.FloatField()),
                ('shipping_total', models.FloatField()),
                ('net_total', models.FloatField()),
                ('total_buy', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='friendship',
            name='creator',
        ),
        migrations.RemoveField(
            model_name='friendship',
            name='friend',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='user',
        ),
        migrations.DeleteModel(
            name='Blocking',
        ),
        migrations.DeleteModel(
            name='Friendship',
        ),
        migrations.DeleteModel(
            name='Profile',
        ),
    ]
